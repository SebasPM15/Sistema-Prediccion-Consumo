{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pilco/Documents/Proyectos%20personales/Pasantia/sistema-prediccion/frontend/app/components/ProductForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\ninterface ProductFormProps {\r\n    onClose: () => void;\r\n    onProductAdded: () => void;\r\n}\r\n\r\nconst months = [\r\n    \"ENE\", \"FEB\", \"MAR\", \"ABR\", \"MAY\", \"JUN\",\r\n    \"JUL\", \"AGO\", \"SEP\", \"OCT\", \"NOV\", \"DIC\"\r\n];\r\n\r\nconst ProductForm: React.FC<ProductFormProps> = ({ onClose, onProductAdded }) => {\r\n    const [productData, setProductData] = useState({\r\n        codigo: \"\",\r\n        descripcion: \"\",\r\n        unidCaja: \"\",\r\n        stockTotal: \"\",\r\n        consumos: Array(12).fill(0),\r\n    });\r\n\r\n    const handleChange = (\r\n        e: React.ChangeEvent<HTMLInputElement>,\r\n        index?: number\r\n    ) => {\r\n        const { name, value } = e.target;\r\n        if (index !== undefined) {\r\n            // Validar que el valor ingresado no sea negativo\r\n            const newValue = Math.max(0, Number(value)); // Se asegura que el valor no sea negativo\r\n            const newConsumos = [...productData.consumos];\r\n            newConsumos[index] = newValue;\r\n            setProductData({ ...productData, consumos: newConsumos });\r\n        } else {\r\n            setProductData({ ...productData, [name]: value });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n    \r\n        const { codigo, descripcion, unidCaja, stockTotal, consumos } = productData;\r\n    \r\n        if (!codigo || !descripcion || !unidCaja || !stockTotal) {\r\n            alert(\"Todos los campos son obligatorios\");\r\n            return;\r\n        }\r\n    \r\n        if (consumos.filter((c) => c > 0).length < 5) {\r\n            alert(\"Debe ingresar al menos 5 consumos.\");\r\n            return;\r\n        }\r\n    \r\n        // Verificar si el código de producto ya existe antes de enviar la solicitud\r\n        try {\r\n            const checkResponse = await axios.get(`http://localhost:3500/api/products/${codigo}`);\r\n    \r\n            if (checkResponse.status === 200) {\r\n                alert(\"El código de producto ya existe. Por favor, use otro código.\");\r\n                return; // Si el código ya existe, no enviamos el formulario\r\n            }\r\n        } catch (error: unknown) { // Definir error como unknown\r\n            if (axios.isAxiosError(error)) {\r\n                if (error.response && error.response.status === 404) {\r\n                    // Si el producto no existe (código no existe), proceder con la creación\r\n                    const formattedConsumos: { [key: string]: number } = months.reduce((acc, month, index) => {\r\n                        acc[month + \" 2024\"] = consumos[index];\r\n                        return acc;\r\n                    }, {} as { [key: string]: number });\r\n    \r\n                    try {\r\n                        const response = await axios.post(\"http://localhost:3500/api/products\", {\r\n                            codigo,\r\n                            descripcion,\r\n                            unidCaja: Number(unidCaja),\r\n                            stockTotal: Number(stockTotal),\r\n                            consumos: formattedConsumos,\r\n                        });\r\n    \r\n                        if (response.status === 200) {\r\n                            onProductAdded();\r\n                            onClose();\r\n                            alert(\"Producto guardado correctamente\");\r\n                        }\r\n                    } catch (error: unknown) { // Definir error como unknown\r\n                        if (axios.isAxiosError(error)) {\r\n                            console.error(\"Error al guardar el producto:\", error.response?.data);\r\n                            alert(\"Hubo un error al intentar guardar el producto: \" + error.response?.data.message);\r\n                        } else {\r\n                            console.error(\"Error desconocido:\", error);\r\n                            alert(\"Hubo un error al intentar guardar el producto.\");\r\n                        }\r\n                    }\r\n                } else {\r\n                    console.error(\"Error inesperado:\", error);\r\n                    alert(\"Hubo un error al verificar el producto.\");\r\n                }\r\n            } else {\r\n                console.error(\"Error desconocido:\", error);\r\n                alert(\"Hubo un error al intentar verificar el producto.\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"fixed inset-0 bg-slate-500/30 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\r\n            <form\r\n                onSubmit={handleSubmit}\r\n                className=\"bg-white w-full max-w-2xl rounded-xl p-8 space-y-6 shadow-xl border border-slate-200\"\r\n            >\r\n                <div className=\"flex justify-between items-center\">\r\n                    <h2 className=\"text-2xl font-bold text-slate-900\">Nuevo Producto</h2>\r\n                    <button type=\"button\" onClick={onClose} className=\"text-slate-600 hover:text-slate-800\">\r\n                        ✕\r\n                    </button>\r\n                </div>\r\n    \r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-slate-900\">Código</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"codigo\"\r\n                                value={productData.codigo}\r\n                                onChange={handleChange}\r\n                                className=\"w-full px-4 py-2 rounded-lg border border-slate-300 focus:ring-2 focus:ring-sky-500 focus:border-sky-500 text-slate-900 bg-slate-100\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-slate-900\">Descripción</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"descripcion\"\r\n                                value={productData.descripcion}\r\n                                onChange={handleChange}\r\n                                className=\"w-full px-4 py-2 rounded-lg border border-slate-300 focus:ring-2 focus:ring-sky-500 focus:border-sky-500 text-slate-900 bg-slate-100\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-slate-900\">Unidad/Caja</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"unidCaja\"\r\n                                value={productData.unidCaja}\r\n                                onChange={handleChange}\r\n                                className=\"w-full px-4 py-2 rounded-lg border border-slate-300 focus:ring-2 focus:ring-sky-500 focus:border-sky-500 text-slate-900 bg-slate-100\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-slate-900\">Stock Total</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"stockTotal\"\r\n                                value={productData.stockTotal}\r\n                                onChange={handleChange}\r\n                                className=\"w-full px-4 py-2 rounded-lg border border-slate-300 focus:ring-2 focus:ring-sky-500 focus:border-sky-500 text-slate-900 bg-slate-100\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n                <div>\r\n                    <h3 className=\"text-lg font-semibold text-slate-900\">Consumo Mensual 2024</h3>\r\n                    <div className=\"grid grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4\">\r\n                        {productData.consumos.map((consumo, index) => (\r\n                            <div key={index}>\r\n                                <label className=\"block text-xs font-medium text-slate-800 mb-1\">{months[index]}</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={consumo}\r\n                                    onChange={(e) => handleChange(e, index)}\r\n                                    className=\"w-full px-3 py-2 text-sm rounded-md border border-slate-300 focus:ring-1 focus:ring-sky-500 focus:border-sky-500 text-slate-900 bg-slate-100\"\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n    \r\n                <div className=\"flex justify-end gap-3 pt-6\">\r\n                    <button type=\"button\" onClick={onClose} className=\"px-6 py-2 rounded-lg border border-slate-200 text-slate-600 hover:bg-slate-100\">\r\n                        Cancelar\r\n                    </button>\r\n                    <button type=\"submit\" className=\"px-6 py-2 rounded-lg bg-sky-500 text-white hover:bg-sky-600 focus:ring-2 focus:ring-sky-200\">\r\n                        Guardar Producto\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );    \r\n};\r\n\r\nexport default ProductForm;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pilco/Documents/Proyectos%20personales/Pasantia/sistema-prediccion/frontend/app/components/Dashboard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ProductForm from './ProductForm';\r\n\r\ninterface Proyeccion {\r\n    mes: string;\r\n    stock_actual_proyectado: number;\r\n    stock_seguridad: number;\r\n    consumo_previsto: number;\r\n    po_recibido: number;\r\n    stock_minimo_requerido: number;\r\n    cajas_a_pedir: number;\r\n    alerta_stock: boolean;\r\n    purchaseOrders?: any[];\r\n}\r\n\r\ninterface Prediccion {\r\n    codigo: string;\r\n    parametros_base: {\r\n        modelo: string;\r\n        stock_inicial: number;\r\n        unidades_por_caja: number;\r\n        horizonte_prediccion: string;\r\n    };\r\n    proyecciones: Proyeccion[];\r\n}\r\n\r\ninterface Producto {\r\n    codigo: string;\r\n    descripcion: string;\r\n    unidCaja: number;\r\n    stockTotal: number;\r\n    consumos: { [key: string]: number };\r\n    createdAt: string;\r\n    updatedAt: string;\r\n}\r\n\r\nconst Dashboard = () => {\r\n    const [products, setProducts] = useState<Producto[]>([]);\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState<string | null>(null);\r\n    const [prediction, setPrediction] = useState<Prediccion | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [showPOForm, setShowPOForm] = useState(false);\r\n    const [selectedMonth, setSelectedMonth] = useState<string>('');\r\n    const [poData, setPOData] = useState({\r\n        cantidad: 0,\r\n        fecha_entrega: ''\r\n    });\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3500/api/products');\r\n            setProducts(response.data.data);\r\n        } catch (error) {\r\n            console.error('Error al obtener productos:', error);\r\n            setError('Error al cargar los productos');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const handleCreatePO = async () => {\r\n        try {\r\n            if (!selectedProduct) return;\r\n            \r\n            let [mes, año] = selectedMonth.split('-');\r\n            mes = mes.toUpperCase().replace('DEC', 'DIC');\r\n            \r\n            const response = await axios.post(\r\n                `http://localhost:3500/api/products/${selectedProduct}/pos`,\r\n                {\r\n                    mes,\r\n                    año: parseInt(año),\r\n                    cantidad: poData.cantidad,\r\n                    fecha_entrega: poData.fecha_entrega\r\n                }\r\n            );\r\n\r\n            if (prediction) {\r\n                const updatedProyecciones = prediction.proyecciones.map(proyeccion => {\r\n                    if (proyeccion.mes === selectedMonth) {\r\n                        return {\r\n                            ...proyeccion,\r\n                            purchaseOrders: [...(proyeccion.purchaseOrders || []), response.data.data]\r\n                        };\r\n                    }\r\n                    return proyeccion;\r\n                });\r\n                \r\n                setPrediction({\r\n                    ...prediction,\r\n                    proyecciones: updatedProyecciones\r\n                });\r\n            }\r\n\r\n            setShowPOForm(false);\r\n            setPOData({ cantidad: 0, fecha_entrega: '' });\r\n            alert('Orden de compra creada exitosamente');\r\n        } catch (error) {\r\n            console.error('Error al crear PO:', error);\r\n            setError('Error al crear la orden de compra');\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString: string) => {\r\n        return new Date(dateString).toLocaleDateString('es-ES', {\r\n            year: 'numeric',\r\n            month: '2-digit',\r\n            day: '2-digit',\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n        });\r\n    };\r\n\r\n    const sortConsumptions = (consumos: { [key: string]: number }) => {\r\n        const monthOrder = ['ENE', 'FEB', 'MAR', 'ABR', 'MAY', 'JUN',\r\n            'JUL', 'AGO', 'SEP', 'OCT', 'NOV', 'DIC'];\r\n\r\n        return Object.entries(consumos)\r\n            .sort(([a], [b]) => {\r\n                const [monthA, yearA] = a.split(' ');\r\n                const [monthB, yearB] = b.split(' ');\r\n                return (\r\n                    parseInt(yearA) - parseInt(yearB) ||\r\n                    monthOrder.indexOf(monthA) - monthOrder.indexOf(monthB)\r\n                );\r\n            });\r\n    };\r\n\r\n    const handlePredict = async (productCode: string) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            // Obtener predicción\r\n            const predictionResponse = await axios.get<{ data: { prediction: Prediccion } }>(\r\n                `http://localhost:3500/api/predictions/${productCode}/predict`\r\n            );\r\n            \r\n            // Obtener órdenes de compra existentes\r\n            const poResponse = await axios.get(\r\n                `http://localhost:3500/api/products/${productCode}/pos`\r\n            );\r\n\r\n            // Mapear POs a las proyecciones correspondientes\r\n            const updatedProyecciones = predictionResponse.data.data.prediction.proyecciones.map(proyeccion => {\r\n                const [mes, año] = proyeccion.mes.split('-');\r\n                const pos = poResponse.data.filter((po: any) => \r\n                    po.mes.toUpperCase() === mes && po.año.toString() === año\r\n                );\r\n                \r\n                return {\r\n                    ...proyeccion,\r\n                    purchaseOrders: pos\r\n                };\r\n            });\r\n\r\n            setPrediction({\r\n                ...predictionResponse.data.data.prediction,\r\n                proyecciones: updatedProyecciones\r\n            });\r\n            setSelectedProduct(productCode);\r\n        } catch (err: any) {\r\n            setError(err.response?.data?.error || 'Error al obtener la predicción');\r\n            console.error('Prediction error:', err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const calcularAlertas = (proyecciones: Proyeccion[]) => {\r\n        return proyecciones.filter(p => p.alerta_stock).length;\r\n    };\r\n\r\n    const formatMes = (mes: string) => {\r\n        return mes.replace('-', ' ').toUpperCase();\r\n    };\r\n\r\n    const renderPOForm = () => (\r\n        <div className=\"fixed inset-0 bg-slate-500/30 backdrop-blur-sm flex items-center justify-center p-4 z-[100]\">\r\n            <div className=\"bg-white rounded-xl p-6 w-full max-w-md shadow-xl border border-slate-200\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                    <h3 className=\"text-xl font-bold text-slate-800\">\r\n                        Nueva Orden de Compra ({selectedMonth.replace('DEC', 'DIC')})\r\n                    </h3>\r\n                    <button\r\n                        onClick={() => setShowPOForm(false)}\r\n                        className=\"text-slate-500 hover:text-slate-700\"\r\n                    >\r\n                        ✕\r\n                    </button>\r\n                </div>\r\n                <div className=\"space-y-4\">\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium mb-2 text-slate-700\">\r\n                            Cantidad de Cajas\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={poData.cantidad}\r\n                            onChange={(e) => setPOData({...poData, cantidad: Number(e.target.value)})}\r\n                            className=\"w-full px-4 py-2 rounded-lg border border-slate-200\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium mb-2 text-slate-700\">\r\n                            Fecha de Entrega\r\n                        </label>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={poData.fecha_entrega}\r\n                            onChange={(e) => setPOData({...poData, fecha_entrega: e.target.value})}\r\n                            className=\"w-full px-4 py-2 rounded-lg border border-slate-200\"\r\n                            min={new Date().toISOString().split('T')[0]}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        onClick={handleCreatePO}\r\n                        className=\"w-full px-4 py-2 bg-sky-600 text-white rounded-lg hover:bg-sky-700\"\r\n                    >\r\n                        Guardar Orden\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-6 max-w-7xl bg-slate-50 min-h-screen\">\r\n            <div className=\"flex justify-between items-center mb-8\">\r\n                <h1 className=\"text-3xl font-bold text-slate-700\">\r\n                    📦 Panel de Control de Inventario\r\n                </h1>\r\n                <button\r\n                    onClick={() => setShowForm(true)}\r\n                    className=\"px-6 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors shadow-sm flex items-center gap-2\"\r\n                >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    Nuevo Producto\r\n                </button>\r\n            </div>\r\n\r\n            {showForm && <ProductForm onClose={() => setShowForm(false)} onProductAdded={fetchProducts} />}\r\n            {showPOForm && renderPOForm()}\r\n\r\n            {error && (\r\n                <div className=\"mb-4 p-4 bg-rose-100 text-rose-700 rounded-lg\">\r\n                    {error}\r\n                </div>\r\n            )}\r\n\r\n            {prediction && (\r\n                <div className=\"fixed inset-0 bg-slate-500/30 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\r\n                    <div className=\"bg-white rounded-xl p-6 w-full max-w-4xl shadow-xl border border-slate-200\">\r\n                        <div className=\"flex justify-between items-center mb-4\">\r\n                            <h3 className=\"text-xl font-bold text-slate-800\">\r\n                                Predicción para {prediction.codigo}\r\n                            </h3>\r\n                            <button\r\n                                onClick={() => setPrediction(null)}\r\n                                className=\"text-slate-500 hover:text-slate-700\"\r\n                            >\r\n                                ✕\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-4\">\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                                <div className=\"p-4 bg-slate-50 rounded-lg\">\r\n                                    <h4 className=\"font-medium mb-2 text-lg text-slate-800\">Parámetros Base</h4>\r\n                                    <div className=\"space-y-2 text-sm text-slate-600\">\r\n                                        <p><span className=\"font-medium\">Modelo:</span> {prediction.parametros_base.modelo}</p>\r\n                                        <p><span className=\"font-medium\">Stock Inicial:</span> {prediction.parametros_base.stock_inicial}</p>\r\n                                        <p><span className=\"font-medium\">Unidades por Caja:</span> {prediction.parametros_base.unidades_por_caja}</p>\r\n                                        <p><span className=\"font-medium\">Horizonte de Predicción:</span> {prediction.parametros_base.horizonte_prediccion}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"p-4 bg-slate-50 rounded-lg\">\r\n                                    <h4 className=\"font-medium mb-2 text-lg text-slate-800\">Resumen General</h4>\r\n                                    <div className={`p-3 rounded-lg ${calcularAlertas(prediction.proyecciones) > 0\r\n                                            ? 'bg-rose-100 text-rose-800'\r\n                                            : 'bg-emerald-100 text-emerald-800'\r\n                                        }`}>\r\n                                        <p className=\"text-sm font-medium\">\r\n                                            {calcularAlertas(prediction.proyecciones) > 0\r\n                                                ? `⚠️ Alertas de stock en ${calcularAlertas(prediction.proyecciones)} meses`\r\n                                                : '✅ Stock suficiente proyectado'}\r\n                                        </p>\r\n                                        <p className=\"mt-2 text-sm\">\r\n                                            Cajas totales recomendadas: {\r\n                                                prediction.proyecciones.reduce((sum, p) => sum + p.cajas_a_pedir, 0)\r\n                                            }\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"overflow-x-auto rounded-lg border border-slate-200\">\r\n                                <table className=\"w-full text-sm\">\r\n                                    <thead className=\"bg-slate-100\">\r\n                                        <tr>\r\n                                            <th className=\"p-3 text-left text-slate-700\">Mes</th>\r\n                                            <th className=\"p-3 text-left text-slate-700\">Consumo Previsto</th>\r\n                                            <th className=\"p-3 text-left text-slate-700\">Stock Proyectado</th>\r\n                                            <th className=\"p-3 text-left text-slate-700\">Stock Seguridad</th>\r\n                                            <th className=\"p-3 text-left text-slate-700\">PO Recibido</th>\r\n                                            <th className=\"p-3 text-left text-slate-700\">Cajas a Pedir</th>\r\n                                            <th className=\"p-3 text-left text-slate-700\">Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {prediction.proyecciones.map((proyeccion, index) => (\r\n                                            <tr\r\n                                                key={index}\r\n                                                className={`border-b border-slate-200 ${proyeccion.alerta_stock ? 'bg-rose-50' : ''}`}\r\n                                            >\r\n                                                <td className=\"p-3 text-slate-800\">{formatMes(proyeccion.mes)}</td>\r\n                                                <td className=\"p-3 text-slate-600\">{proyeccion.consumo_previsto.toFixed(2)}</td>\r\n                                                <td className=\"p-3 text-slate-600\">{proyeccion.stock_actual_proyectado.toFixed(2)}</td>\r\n                                                <td className=\"p-3 text-slate-600\">{proyeccion.stock_seguridad.toFixed(2)}</td>\r\n                                                <td className=\"p-3 text-slate-600\">\r\n                                                    <div className=\"flex flex-wrap gap-1\">\r\n                                                        {proyeccion.purchaseOrders?.map((po: any, idx: number) => (\r\n                                                            <span key={idx} className=\"px-2 py-1 bg-slate-100 text-slate-600 rounded-full text-xs\">\r\n                                                                {po.cantidad} cajas\r\n                                                            </span>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"p-3 text-center\">\r\n                                                    {proyeccion.cajas_a_pedir > 0 && (\r\n                                                        <span className=\"px-2 py-1 bg-amber-100 text-amber-800 rounded-full text-xs font-medium\">\r\n                                                            {proyeccion.cajas_a_pedir}\r\n                                                        </span>\r\n                                                    )}\r\n                                                </td>\r\n                                                <td className=\"p-3\">\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            setSelectedMonth(proyeccion.mes);\r\n                                                            setShowPOForm(true);\r\n                                                        }}\r\n                                                        className=\"px-2 py-1 bg-emerald-100 text-emerald-700 rounded-full text-xs hover:bg-emerald-200\"\r\n                                                    >\r\n                                                        + Orden\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <button\r\n                                onClick={() => setPrediction(null)}\r\n                                className=\"w-full mt-4 px-4 py-2 bg-sky-600 text-white rounded-lg hover:bg-sky-700 transition-colors\"\r\n                            >\r\n                                Cerrar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"bg-white rounded-xl overflow-hidden shadow-sm border border-slate-200\">\r\n                <div className=\"p-6 border-b border-slate-200\">\r\n                    <h2 className=\"text-xl font-semibold text-slate-700\">\r\n                        Inventario Actual ({products.length} productos)\r\n                    </h2>\r\n                </div>\r\n\r\n                <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full\">\r\n                        <thead className=\"bg-slate-100\">\r\n                            <tr>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-medium text-slate-600\">Código</th>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-medium text-slate-600\">Descripción</th>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-medium text-slate-600\">Unidad/Caja</th>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-medium text-slate-600\">Stock Total</th>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-medium text-slate-600\">Consumos</th>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-medium text-slate-600\">Creado</th>\r\n                                <th className=\"px-6 py-4 text-left text-sm font-medium text-slate-600\">Acciones</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"divide-y divide-slate-200\">\r\n                            {products.length === 0 ? (\r\n                                <tr>\r\n                                    <td colSpan={7} className=\"px-6 py-8 text-center text-slate-400\">\r\n                                        <div className=\"flex flex-col items-center justify-center\">\r\n                                            <span className=\"text-4xl mb-4\">📭</span>\r\n                                            No se encontraron productos\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            ) : (\r\n                                products.map((product) => (\r\n                                    <tr key={product.codigo} className=\"hover:bg-slate-50 transition-colors\">\r\n                                        <td className=\"px-6 py-4 font-medium text-slate-700\">\r\n                                            {product.codigo}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 text-slate-600 max-w-xs\">\r\n                                            {product.descripcion}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 text-slate-600 text-center\">\r\n                                            {product.unidCaja}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 text-center\">\r\n                                            <span className={`px-2 py-1 rounded-full text-sm ${\r\n                                                product.stockTotal > 50 \r\n                                                    ? 'bg-emerald-100 text-emerald-700'\r\n                                                    : 'bg-rose-100 text-rose-700'\r\n                                            }`}>\r\n                                                {product.stockTotal}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            <div className=\"flex flex-wrap gap-2 max-w-xs\">\r\n                                                {sortConsumptions(product.consumos).map(([month, value]) => (\r\n                                                    <div key={month} className=\"px-2 py-1 bg-sky-100 text-sky-700 rounded-full text-xs\">\r\n                                                        {month}: {value}\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 text-slate-600 text-sm\">\r\n                                            {formatDate(product.createdAt)}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            <button\r\n                                                onClick={() => handlePredict(product.codigo)}\r\n                                                className=\"px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors text-sm flex items-center gap-2\"\r\n                                                disabled={loading}\r\n                                            >\r\n                                                {loading && selectedProduct === product.codigo ? (\r\n                                                    <svg className=\"animate-spin h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                                                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                                                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                                                    </svg>\r\n                                                ) : (\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                                        <path fillRule=\"evenodd\" d=\"M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z\" clipRule=\"evenodd\" />\r\n                                                    </svg>\r\n                                                )}\r\n                                                Predecir\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1538, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pilco/Documents/Proyectos%20personales/Pasantia/sistema-prediccion/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport Dashboard from './components/Dashboard';\n\nconst Home = () => {\n  return (\n    <div className=\"min-h-screen bg-slate-50\">\n      <div className=\"max-w-7xl mx-auto p-6\">\n        <h1 className=\"text-3xl font-bold text-slate-800 mb-8\">\n          Sistema de Predicción de Inventario\n        </h1>\n        <div className=\"bg-white rounded-xl shadow-sm border border-slate-200 p-6\">\n          <Dashboard />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,OAAO;IACX,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAyC;;;;;;8BAGvD,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,+HAAA,CAAA,UAAS;;;;;;;;;;;;;;;;;;;;;AAKpB;uCAEe","debugId":null}}]
}